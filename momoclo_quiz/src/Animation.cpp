//==========================================================//
//ライブラリ以外で必要となるヘッダーファイルのインクルード
//構造体定義が必要となるので同名のヘッダーファイルを記述しておく。
//==========================================================//
#include	"Animation.h"
//==========================================================//
//内部で使用する変数、構造体の宣言
//また外部にある変数を使用した場合はexternで宣言する
//==========================================================//

//アニメ種類
Animation anim[ANIM_KINDS_MAX][ANIME_MOTION_MAX][ANIME_MAX] = 
{
	//ANIM_NO
	{
		{{ -1, 0}}
	},
	//ANIM_DAM_YAZIRUSHI
	{
		//左
		{{ 0, 30},{ 1, 10},{ 2, 10},{ 3, 10},{ 4, 10}, { 5, 10},{ 6, 10},{ 7, 10},{-8, 0}},
		//上
		{{ 8, 30},{ 9, 10},{10, 10},{11, 10},{12, 10}, {13, 10},{14, 10},{15, 10},{-8, 0}},
		//右
		{{16, 30},{17, 10},{18, 10},{19, 10},{20, 10}, {21, 10},{22, 10},{23, 10},{-8, 0}},
		//下
		{{24, 30},{25, 10},{26, 10},{27, 10},{28, 10}, {29, 10},{30, 10},{31, 10},{-8, 0}},
	},
	//ANIM_ICON_SET
	{
		{{ 0, 10},{ 1, 10},{ 2, 10},{ 3, 10},{ 4, 10}, { 5, 10},{ 6, 10},{ 7, 10},{ 8, 10},{ 9, 10},{10, 10},{11, 10},{12, 10}, {13, 10},{14, 10},{15, 10},{16, 10},{17, 10},{18, 10},{19, 10},{20, 20}, {21, 20},{22, 20},{23, 20},{24, 20},{25, 20},{26, 20},{-27, 0}}
	},
	//ANIM_EFFECT_PLAYER
	{
		{{ 4, 10},{ 5, 10},{ 6, 10},{ 7, 10},{ 8, 10}, { 9, 10},{10, 10},{-7, 0},}
	},
	//ANIM_EFFECT_ENEMY
	{
		{{ 5, 10},{ 6, 10},{ 7, 10},{8, 10},{9, 10},{10, 10},{-6, 0},}
	},
	//ANIM_EXPLOSION,
	{
		{{ 0, 1},{ 1, 1},{ 2, 1},{ 3, 1},{ 4, 1},{ 5, 1},{6, 1},{7, 1},{ 8, 1},{ 9, 1},{10, 1},{11, 1},{12, 1},{13, 1},{14, 1},{-15, 0},}
	}
};
//==========================================================//
//関数プロトタイプ宣言
//==========================================================//
//------------------------------------------------------------
//	アニメ初期化セット
//------------------------------------------------------------
void CAnim::SetAnim(int posX, int posY, int shiftPosX, int shiftPosY, int sX, int sY, int eX, int eY, ANIM_KINDS kind, int motion, float posZ)
{
	this->posX				= posX;
	this->posY				= posY;
	this->posZ				= posZ;
	this->shiftPosX			= shiftPosX;
	this->shiftPosY			= shiftPosY;
	this->imgSize.left		= sX;
	this->imgSize.top		= sY;
	this->imgSize.right		= eX;
	this->imgSize.bottom	= eY;
	this->kind				= kind;
	this->motion			= motion;	
	this->animNo			= 0;		
	this->animCntBuf		= 0;		
}

//------------------------------------------------------------
//	アニメ描画
//------------------------------------------------------------
//	img:	使う画像
//------------------------------------------------------------
void CAnim::DispAnim(IMGOBJ img)
{
	if(mControlF)
	{
		Draw_Bitmap(posX + shiftPosX, posY + shiftPosY, 
					img,
					((anim[kind][motion][animNo].no) % imgSize.left) * imgSize.right,	
					((anim[kind][motion][animNo].no) / imgSize.top)  * imgSize.bottom,
					imgSize.right,imgSize.bottom,
					posZ);
	}
}

//------------------------------------------------------------
//	アニメ制御
//------------------------------------------------------------
bool CAnim::ControlAnim()
{
	if(mControlF)
	{
		//アニメカウンタ加算
		++animCntBuf;

		//指定のアニメーション時間を超えたか判定
		if(anim[kind][motion][animNo].time < animCntBuf)
		{
			//カウンタリセット
			animCntBuf = 0;
			//次のアニメーションに切り替え
			++animNo;

			//最後までアニメーションが行ったら最初に戻す
			if(anim[kind][motion][animNo].no < 0)
			{
				//最初に戻す
				animNo += anim[kind][motion][animNo].no;
				return true;
			}
		}
	}
	return false;
}

//==========================================================//
//関数定義
//==========================================================//
